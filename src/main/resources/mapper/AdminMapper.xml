<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.workordersystem.mapper.AdminMapper">
    <insert id="insertNewUser">
        INSERT INTO user(username, password, phone, `account_type`, `latest_login_time`, `latest_login_ip`,
                         `avatar_url`)
        VALUES (#{username}, #{password}, #{phone}, #{accountType}, #{latestLoginTime}, #{latestLoginIp}, #{avatarUrl})
    </insert>
    <update id="updatePassword">
        UPDATE user
        SET user.password = #{newPassword}
        WHERE user.username = #{userName}
    </update>
    <update id="updateUserType">
        UPDATE user SET account_type = #{type} WHERE user.username IN
        <foreach collection="usernames" index="index" item="username" open="(" close=")" separator=",">
            #{username}
        </foreach>
    </update>
    <update id="updateUserLogState">
        UPDATE user SET user.logout = #{logState} WHERE username IN
        <foreach collection="usernames" item="username" index="index" open="(" close=")" separator=",">
            #{username}
        </foreach>
    </update>
    <delete id="deleteUsers">
        DELETE FROM user WHERE username IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
             #{item}
        </foreach>
    </delete>

    <select id="findUserByUserName" resultType="com.server.workordersystem.entity.User">
        SELECT *
        FROM user
        WHERE user.username = #{username}
    </select>
    <select id="selectAllUsers" resultType="com.server.workordersystem.entity.User">
        SELECT *
        FROM user
    </select>
    <insert id="insertNewIpAddress">
        INSERT INTO filter(fid, ip_address)
        VALUES
        <foreach collection="filter" index="index" item="item" separator=",">
            (#{item.fid},#{item.ipAddress})
        </foreach>
    </insert>
    <insert id="addLog">
        INSERT INTO log(log_id, username, time, operation, state, reason)
        VALUES (#{logId}, #{username}, #{time}, #{operation}, #{state}, #{reason})
    </insert>
    <update id="updateUserAuthorization">
        UPDATE user SET `account_type` = #{type}
        WHERE user.username IN
        <foreach collection="usernames" item="username" index="index" open="(" close=")" separator=",">
            #{username}
        </foreach>
    </update>
    <update id="updateServerPort">
        <if test="serverType==0">
            UPDATE `server-msg` SET `server-msg`.`smtp_port` = #{serverPort} WHERE sid = #{sid}
        </if>
        <if test="serverType==1">
            UPDATE `server-msg` SET `server-msg`.`pop3_port` = #{serverPort} WHERE sid = #{sid}
        </if>
    </update>
    <update id="updateServerState">
        <if test="serverType==0">
            UPDATE `server-msg` SET `server-msg`.`smtp_state` = #{serverState} WHERE sid = #{sid}
        </if>
        <if test="serverType==1">
            UPDATE `server-msg` SET `server-msg`.`pop3_state` = #{serverState} WHERE sid = #{sid}
        </if>
    </update>
    <update id="updateMailBoxSize">
        UPDATE user SET user.mail_box_size = #{size} WHERE username IN
        <foreach collection="usernames" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>
    <update id="updateUserForbidden">
        UPDATE user SET user.forbidden = #{forbidden} WHERE username IN
        <foreach collection="usernames" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>
    <delete id="deleteIpAddress">
        DELETE FROM filter
        WHERE ip_address IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteLog" parameterType="java.util.List">
        DELETE FROM log WHERE log.log_id IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
    <select id="selectServerMessage" resultType="com.server.workordersystem.entity.ServerMessage">
        SELECT *
        FROM `server-msg`
    </select>
    <select id="selectFilter" resultType="com.server.workordersystem.entity.Filter">
        SELECT *
        FROM filter
    </select>
    <select id="selectLogs" resultType="com.server.workordersystem.entity.Log">
        SELECT *
        FROM log
    </select>
</mapper>
